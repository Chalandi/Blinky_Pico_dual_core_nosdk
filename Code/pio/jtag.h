// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ----------------------- //
// PIO_JTAG_SET_PIN_CONFIG //
// ----------------------- //

#define PIO_JTAG_SET_PIN_CONFIG_wrap_target 0
#define PIO_JTAG_SET_PIN_CONFIG_wrap 0

static const uint16_t PIO_JTAG_SET_PIN_CONFIG_program_instructions[] = {
            //     .wrap_target
    0xe08f, //  0: set    pindirs, 15                
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program PIO_JTAG_SET_PIN_CONFIG_program = {
    .instructions = PIO_JTAG_SET_PIN_CONFIG_program_instructions,
    .length = 1,
    .origin = -1,
};

static inline pio_sm_config PIO_JTAG_SET_PIN_CONFIG_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + PIO_JTAG_SET_PIN_CONFIG_wrap_target, offset + PIO_JTAG_SET_PIN_CONFIG_wrap);
    return c;
}
#endif

// ----------------------- //
// PIO_JTAG_SET_PIN_OUTPUT //
// ----------------------- //

#define PIO_JTAG_SET_PIN_OUTPUT_wrap_target 0
#define PIO_JTAG_SET_PIN_OUTPUT_wrap 0

static const uint16_t PIO_JTAG_SET_PIN_OUTPUT_program_instructions[] = {
            //     .wrap_target
    0xe00f, //  0: set    pins, 15                   
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program PIO_JTAG_SET_PIN_OUTPUT_program = {
    .instructions = PIO_JTAG_SET_PIN_OUTPUT_program_instructions,
    .length = 1,
    .origin = -1,
};

static inline pio_sm_config PIO_JTAG_SET_PIN_OUTPUT_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + PIO_JTAG_SET_PIN_OUTPUT_wrap_target, offset + PIO_JTAG_SET_PIN_OUTPUT_wrap);
    return c;
}
#endif

// ----------------------- //
// PIO_JTAG_RESET_AND_IDLE //
// ----------------------- //

#define PIO_JTAG_RESET_AND_IDLE_wrap_target 0
#define PIO_JTAG_RESET_AND_IDLE_wrap 5

static const uint16_t PIO_JTAG_RESET_AND_IDLE_program_instructions[] = {
            //     .wrap_target
    0xfc24, //  0: set    x, 4            side 3     
    0xf501, //  1: set    pins, 1         side 1 [1] 
    0xfc01, //  2: set    pins, 1         side 3     
    0x0041, //  3: jmp    x--, 1                     
    0xf101, //  4: set    pins, 1         side 0 [1] 
    0xf901, //  5: set    pins, 1         side 2 [1] 
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program PIO_JTAG_RESET_AND_IDLE_program = {
    .instructions = PIO_JTAG_RESET_AND_IDLE_program_instructions,
    .length = 6,
    .origin = -1,
};

static inline pio_sm_config PIO_JTAG_RESET_AND_IDLE_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + PIO_JTAG_RESET_AND_IDLE_wrap_target, offset + PIO_JTAG_RESET_AND_IDLE_wrap);
    sm_config_set_sideset(&c, 3, true, false);
    return c;
}
#endif

// -------- //
// PIO_JTAG //
// -------- //

#define PIO_JTAG_wrap_target 0
#define PIO_JTAG_wrap 29

static const uint16_t PIO_JTAG_program_instructions[] = {
            //     .wrap_target
    0xe041, //  0: set    y, 1                       
    0x80a0, //  1: pull   block                      
    0xa027, //  2: mov    x, osr                     
    0x0038, //  3: jmp    !x, 24                     
    0x80a0, //  4: pull   block                      
    0xf501, //  5: set    pins, 1         side 1 [1] 
    0xfd01, //  6: set    pins, 1         side 3 [1] 
    0xf501, //  7: set    pins, 1         side 1 [1] 
    0xfd01, //  8: set    pins, 1         side 3 [1] 
    0xf101, //  9: set    pins, 1         side 0 [1] 
    0xf901, // 10: set    pins, 1         side 2 [1] 
    0xf101, // 11: set    pins, 1         side 0 [1] 
    0xf901, // 12: set    pins, 1         side 2 [1] 
    0x7201, // 13: out    pins, 1         side 0 [2] 
    0xb842, // 14: nop                    side 2     
    0x4001, // 15: in     pins, 1                    
    0x004d, // 16: jmp    x--, 13                    
    0x7601, // 17: out    pins, 1         side 1 [2] 
    0xbd42, // 18: nop                    side 3 [1] 
    0x4001, // 19: in     pins, 1                    
    0x8020, // 20: push   block                      
    0x0081, // 21: jmp    y--, 1                     
    0xf501, // 22: set    pins, 1         side 1 [1] 
    0x1d1c, // 23: jmp    28              side 3 [1] 
    0xfc24, // 24: set    x, 4            side 3     
    0xf501, // 25: set    pins, 1         side 1 [1] 
    0xbc42, // 26: nop                    side 3     
    0x0059, // 27: jmp    x--, 25                    
    0xb142, // 28: nop                    side 0 [1] 
    0x1900, // 29: jmp    0               side 2 [1] 
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program PIO_JTAG_program = {
    .instructions = PIO_JTAG_program_instructions,
    .length = 30,
    .origin = -1,
};

static inline pio_sm_config PIO_JTAG_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + PIO_JTAG_wrap_target, offset + PIO_JTAG_wrap);
    sm_config_set_sideset(&c, 3, true, false);
    return c;
}
#endif

